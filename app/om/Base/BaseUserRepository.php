<?php
/**
 * Generated By Subapp\Orm Generator
 * @author Ivan Hontarenko
 *
 * IMPORTANT:
 *      Don't edit this file!
 *      This file was generated automatically, and it can happen again
 *      and as a consequence it will overwrite your changes.
 */

namespace CvLand\PhpDatabaseLayer\Base;

use Subapp\Orm\Core\Repository;
use Subapp\Orm\Query\Statement\Comparison\Cmp;
use Subapp\Orm\Query\Statement\OrderBy;
use CvLand\PhpDatabaseLayer\UserRepository;
use CvLand\PhpDatabaseLayer\User;
use Subapp\Orm\Core\ResultSet\ResultSetIterator;

/**
 * Magic methods for query-builder and access to the fields data
 *
 * @method User findOneById($id);
 * @method ResultSetIterator findById($id);
 * @method UserRepository filterById($id, $cmp = Cmp::EQ);
 * @method UserRepository orderById($vector = OrderBy::ASC);
 * @method UserRepository groupById();
 * @method User findOneByName($name);
 * @method ResultSetIterator findByName($name);
 * @method UserRepository filterByName($name, $cmp = Cmp::EQ);
 * @method UserRepository orderByName($vector = OrderBy::ASC);
 * @method UserRepository groupByName();
 * @method User findOneByPassword($password);
 * @method ResultSetIterator findByPassword($password);
 * @method UserRepository filterByPassword($password, $cmp = Cmp::EQ);
 * @method UserRepository orderByPassword($vector = OrderBy::ASC);
 * @method UserRepository groupByPassword();
 * @method User findOneByAccess($accessBitMask);
 * @method ResultSetIterator findByAccess($accessBitMask);
 * @method UserRepository filterByAccess($accessBitMask, $cmp = Cmp::EQ);
 * @method UserRepository orderByAccess($vector = OrderBy::ASC);
 * @method UserRepository groupByAccess();
 * @method User findOneByStatus($status);
 * @method ResultSetIterator findByStatus($status);
 * @method UserRepository filterByStatus($status, $cmp = Cmp::EQ);
 * @method UserRepository orderByStatus($vector = OrderBy::ASC);
 * @method UserRepository groupByStatus();
 * @method User findOneByCreated($created);
 * @method ResultSetIterator findByCreated($created);
 * @method UserRepository filterByCreated($created, $cmp = Cmp::EQ);
 * @method UserRepository orderByCreated($vector = OrderBy::ASC);
 * @method UserRepository groupByCreated();
*/

class BaseUserRepository extends Repository
{

    /**
    * BaseUserRepository constructor.
    */
    public function __construct()
    {
        parent::__construct(User::class);
    }

    /**
    * @param integer $id Identifier
    * @return User Entity instance
    */
    public static function findByPK($id)
    {
        /** @var User $entity */
        $repository = new UserRepository();
        $entity = $repository->retrieve($id);

        return $entity;
    }

}
